Input: -12, 11, -13, -5, 6, -7, 5, -3, -6
Output: -12 -13 -5 -7 -3 -6 11 6 5

def move(arr):
  arr.sort()
 
# driver code
arr = [ -1, 2, -3, 4, 5, 6, -7, 8, 9 ]
move(arr)
for e in arr:
    print(e , end = " ")
    
Output
-7 -3 -1 2 4 5 6 8 9 
__________________________________________________________


# A Python 3 program to put
# all negative numbers before
# positive numbers
 
def rearrange(arr, n ) :
    j = 0
    for i in range(0, n) :
        if (arr[i] < 0) :
            temp = arr[i]
            arr[i] = arr[j]
            arr[j]= temp
            j = j + 1
    print(arr)
 
# Driver code
arr = [-1, 2, -3, 4, 5, 6, -7, 8, 9]
n = len(arr)
rearrange(arr, n)

Output
-1 -3 -7 4 5 6 2 8 9 
Time complexity: O(N) 
Auxiliary Space: O(1)
____________________________________________________________
Two Pointer Approach:

def shiftall(arr,left,right):
  while left<=right:
    if arr[left] < 0 and arr[right] < 0:
      left+=1
    else if arr[left]>0 and arr[right]<0:
      arr[left], arr[right] = \ arr[right],arr[left]
      left+=1
      right-=1
    else if arr[left]>0 and arr[right]>0:
      right-=1
    else:
      left+=1
      right-=1
       
# Function to print the array
def display(arr):
  for i in range(len(arr)):
    print(arr[i], end=" ")
  print()
 
# Driver Code
if __name__ == "__main__":
  arr=[-12, 11, -13, -5, \6, -7, 5, -3, 11]
  n=len(arr)
  shiftall(arr,0,n-1)
  display(arr)

Output
-12 -3 -13 -5 -7 6 5 11 11 

This is an in-place rearranging algorithm for arranging the positive and negative numbers 
where the order of elements is not maintained.
Time Complexity: O(N)
Auxiliary Space: O(1)
________________________________________________________________________________________________


# Python code for the approach
 
# Using Dutch National Flag Algorithm.
def reArrange(arr, n):
    low,high = 0, n - 1
    while(low<high):
        if(arr[low] < 0):
            low += 1
        elif(arr[high] > 0):
            high -= 1
        else:
            arr[low],arr[high] = arr[high],arr[low]
 
def displayArray(arr, n):
 
    for i in range(n):
        print(arr[i],end = " ")
   
    print('')
 
# driver code
# Data
arr = [1, 2,  -4, -5, 2, -7, 3, 2, -6, -8, -9, 3, 2,  1]
n = len(arr)
reArrange(arr,n)
displayArray(arr,n)

Output
-9 -8 -4 -5 -6 -7 3 2 2 2 1 3 2 1 
Time complexity: O(N) 
Auxiliary Space: O(1)
